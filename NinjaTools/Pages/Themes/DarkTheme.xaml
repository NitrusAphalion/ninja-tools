<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:v="clr-namespace:NinjaTools.Pages.Helpers"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <!--  Brushes  -->
    <LinearGradientBrush x:Key="MainMenuBackground" ColorInterpolationMode="SRgbLinearInterpolation" SpreadMethod="Pad" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FF581B1B" />
        <GradientStop Offset="0.1" Color="#FF3E1E1E" />
        <GradientStop Offset="0.8" Color="#FF1E1E1E" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="StatusBarBackground" ColorInterpolationMode="SRgbLinearInterpolation" SpreadMethod="Pad" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="1" Color="#FF581B1B" />
        <GradientStop Offset="0.9" Color="#FF3E1E1E" />
        <GradientStop Offset="0.2" Color="#FF1E1E1E" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="InactiveMainMenuBackground" ColorInterpolationMode="SRgbLinearInterpolation" SpreadMethod="Pad" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FF585858" />
        <GradientStop Offset="0.1" Color="#FF3E3E3E" />
        <GradientStop Offset="0.8" Color="#FF1E1E1E" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabHeaderBackground" ColorInterpolationMode="SRgbLinearInterpolation" SpreadMethod="Pad" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="1" Color="#FF581B1B" />
        <GradientStop Offset="0.9" Color="#FF3E1E1E" />
        <GradientStop Offset="0.2" Color="#FF1E1E1E" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="InactiveTabHeaderBackground" ColorInterpolationMode="SRgbLinearInterpolation" SpreadMethod="Pad" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="1" Color="#FF1E1E1E" />
        <GradientStop Offset="0.76" Color="#FF3E3E3E" />
        <GradientStop Offset="0" Color="#FF1E1E1E" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabBorderBrush" Color="#FF581B1B" />
    <SolidColorBrush x:Key="VerticalGridLinesBrush" Color="#FF585858" />
    <SolidColorBrush x:Key="ButtonHoverBrush" Color="#77FF0000" />
    <SolidColorBrush x:Key="MainMenuForeground" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="TreeViewBackground" Color="#FF252526" />
    <SolidColorBrush x:Key="DarkBackground" Color="#FF1E1E1E" />
    <SolidColorBrush x:Key="TreeViewForeground" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="GridSplitterBrush" Color="#FF444444" />
    <LinearGradientBrush x:Key="ActiveTabItemBrush" ColorInterpolationMode="SRgbLinearInterpolation" SpreadMethod="Pad" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FF904C4C" />
        <GradientStop Offset="0.76" Color="#FF3E1E1E" />
        <GradientStop Offset="1" Color="#FF1E1E1E" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabPanelBackground" ColorInterpolationMode="SRgbLinearInterpolation" SpreadMethod="Pad" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FF1E1E1E" />
        <GradientStop Offset="0.5" Color="#FF000000" />
    </LinearGradientBrush>
    <FontFamily x:Key="StandardFontFamily">Segoe UI</FontFamily>
    <!--  CheckBox  -->
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="Border"
                                Width="13"
                                Height="13"
                                Background="{StaticResource TreeViewBackground}"
                                BorderBrush="{StaticResource GridSplitterBrush}"
                                BorderThickness="1"
                                CornerRadius="0">
                                <Grid>
                                    <Path
                                        x:Name="CheckMark"
                                        Width="7"
                                        Height="7"
                                        Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                        SnapsToDevicePixels="False"
                                        Stroke="{StaticResource TreeViewForeground}"
                                        StrokeThickness="2"
                                        Visibility="Collapsed" />
                                    <Path
                                        x:Name="InderminateMark"
                                        Width="7"
                                        Height="7"
                                        Data="M 0 7 L 7 0"
                                        SnapsToDevicePixels="False"
                                        Stroke="Red"
                                        StrokeThickness="2"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InderminateMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  FilterResults  -->
    <v:FilterResultsRowHeightConverter x:Key="FilterResultsRowHeightConverter" />

    <Style x:Key="{x:Type xctk:WatermarkTextBox}" TargetType="{x:Type xctk:WatermarkTextBox}">
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="Background" Value="{StaticResource TreeViewBackground}" />
        <Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
        <Setter Property="BorderBrush" Value="{StaticResource GridSplitterBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl
            Margin="0,0,3,0"
            Content="{Binding}"
            Focusable="False"
            Foreground="Gray" />
    </DataTemplate>

    <LinearGradientBrush x:Key="PopupDarkBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFA3AEB9" />
        <GradientStop Offset="0.375" Color="#FF8399A9" />
        <GradientStop Offset="0.375" Color="#FF718597" />
        <GradientStop Offset="1" Color="#FF617584" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--<Geometry x:Key="DownArrowGeometry">M0,0 L3,0 4.5,1.5 6,0 9,0 4.5,4.5 z</Geometry>-->

    <Style x:Key="DateTimePickerToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.ColumnSpan="2"
                            Background="{StaticResource TreeViewBackground}"
                            BorderBrush="{StaticResource GridSplitterBrush}"
                            BorderThickness="0,1,1,1"
                            CornerRadius="0" />
                        <Border
                            Name="ButtonBorder"
                            Grid.Column="1"
                            Margin="1,1,1,1"
                            Background="{StaticResource TreeViewBackground}"
                            BorderBrush="{StaticResource GridSplitterBrush}"
                            BorderThickness="0,0,0,0"
                            CornerRadius="0, 0, 0, 0" />
                        <Path
                            Name="Arrow"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                            Fill="{StaticResource MainMenuForeground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource MainMenuBackground}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource MainMenuBackground}" />
                            <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource TreeViewForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type xctk:DateTimePicker}" TargetType="{x:Type xctk:DateTimePicker}">
        <Setter Property="Background" Value="{StaticResource TreeViewBackground}" />
        <Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="BorderBrush" Value="{StaticResource GridSplitterBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:DateTimePicker}">
                    <Border>
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <xctk:ButtonSpinner
                                    x:Name="PART_Spinner"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    AllowSpin="{TemplateBinding AllowSpin}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}"
                                    IsTabStop="False"
                                    ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}">
                                    <xctk:WatermarkTextBox
                                        x:Name="PART_TextBox"
                                        MinWidth="20"
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        AcceptsReturn="False"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontStretch="{TemplateBinding FontStretch}"
                                        FontStyle="{TemplateBinding FontStyle}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsTabStop="True"
                                        IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                        TabIndex="{TemplateBinding TabIndex}"
                                        Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                        TextAlignment="{TemplateBinding TextAlignment}"
                                        TextWrapping="NoWrap"
                                        Watermark="{TemplateBinding Watermark}"
                                        WatermarkTemplate="{TemplateBinding WatermarkTemplate}" />
                                </xctk:ButtonSpinner>
                                <ToggleButton
                                    x:Name="_calendarToggleButton"
                                    Grid.Column="1"
                                    Background="Transparent"
                                    Focusable="False"
                                    IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                    IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                    Style="{StaticResource DateTimePickerToggleButtonStyle}"
                                    Visibility="{TemplateBinding ShowDropDownButton,
                                                                 Converter={StaticResource BooleanToVisibilityConverter}}" />
                            </Grid>
                            <Popup
                                x:Name="PART_Popup"
                                IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}"
                                StaysOpen="False"
                                ToolTip="{x:Static sys:String.Empty}">
                                <Popup.Resources>
                                    <Style TargetType="ToolTip">
                                        <Style.Triggers>
                                            <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Popup.Resources>
                                <Border
                                    Padding="3"
                                    Background="{StaticResource TreeViewBackground}"
                                    BorderBrush="{StaticResource GridSplitterBrush}"
                                    BorderThickness="1">
                                    <StackPanel>
                                        <Calendar
                                            x:Name="PART_Calendar"
                                            BorderThickness="0"
                                            DisplayMode="{Binding CalendarDisplayMode, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Calendar.Template>
                                                <ControlTemplate TargetType="{x:Type Calendar}">
                                                    <Viewbox Width="{Binding CalendarWidth, RelativeSource={RelativeSource AncestorType={x:Type xctk:DateTimePicker}}}">
                                                        <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                                                            <CalendarItem
                                                                x:Name="PART_CalendarItem"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Style="{TemplateBinding CalendarItemStyle}" />
                                                        </StackPanel>
                                                    </Viewbox>
                                                </ControlTemplate>
                                            </Calendar.Template>
                                        </Calendar>
                                        <xctk:TimePicker
                                            x:Name="PART_TimeUpDown"
                                            AllowSpin="{TemplateBinding TimePickerAllowSpin}"
                                            Background="{StaticResource TreeViewBackground}"
                                            BorderBrush="{StaticResource GridSplitterBrush}"
                                            ClipValueToMinMax="{Binding ClipValueToMinMax, RelativeSource={RelativeSource TemplatedParent}}"
                                            Foreground="{StaticResource TreeViewForeground}"
                                            Format="{TemplateBinding TimeFormat}"
                                            FormatString="{TemplateBinding TimeFormatString}"
                                            IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                            Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                            Maximum="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}}"
                                            Minimum="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}}"
                                            ShowButtonSpinner="{TemplateBinding TimePickerShowButtonSpinner}"
                                            Step="{TemplateBinding Step}"
                                            Visibility="{TemplateBinding TimePickerVisibility}"
                                            Watermark="{TemplateBinding TimeWatermark}"
                                            WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}"
                                            Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TreeViewForegreound}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  AnalyzerResults  -->
    <v:AnalyzerResultsRowHeightConverter x:Key="AnalyzerResultsRowHeightConverter" />
    <!--  Color Picker  -->
    <DrawingBrush
        x:Key="CheckerBrush"
        TileMode="Tile"
        Viewport="0,0,10,10"
        ViewportUnits="Absolute">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50" />
                            <RectangleGeometry Rect="50,50 50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <!--  ComboBox  -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                Name="Border"
                Grid.ColumnSpan="2"
                Background="{StaticResource TreeViewBackground}"
                BorderBrush="{StaticResource GridSplitterBrush}"
                BorderThickness="1,1,1,1"
                CornerRadius="0" />
            <Border
                Name="ButtonBorder"
                Grid.Column="1"
                Margin="1,1,1,1"
                Background="{StaticResource TreeViewBackground}"
                BorderBrush="{StaticResource GridSplitterBrush}"
                BorderThickness="0,0,0,0"
                CornerRadius="0, 0, 0, 0" />

            <Path
                Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                Fill="{StaticResource MainMenuForeground}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource MainMenuBackground}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource MainMenuBackground}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="{StaticResource TreeViewForeground}" />
            </Trigger>
            <!--<Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="Purple" />
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Green" />
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="Red" />
                <Setter Property="TextElement.Foreground" Value="{StaticResource TreeViewForeground}" />
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999" />
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="TextElement.Foreground" Value="{StaticResource TreeViewForeground}" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                        <ContentPresenter
                            Name="ContentSite"
                            Margin="5,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            Name="PART_EditableTextBox"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Visibility="Hidden">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!--  Popup showing items  -->
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    Name="DropDownBorder"
                                    Margin="0,1,0,0"
                                    Background="{StaticResource TreeViewBackground}"
                                    BorderBrush="{StaticResource GridSplitterBrush}"
                                    BorderThickness="1,1,1,1"
                                    CornerRadius="0" />
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource TreeViewForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Label  -->
    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
    </Style>
    <!--  DataGrid  -->
    <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource DarkBackground}" />
        <Setter Property="RowBackground" Value="{StaticResource TreeViewBackground}" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource DarkBackground}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource TabBorderBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource VerticalGridLinesBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HeadersVisibility" Value="Column" />
    </Style>
    <Style x:Key="Style_HeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="BackgroundBorder"
                            Grid.ColumnSpan="2"
                            Background="{StaticResource MainMenuBackground}"
                            BorderBrush="{StaticResource TabBorderBrush}"
                            BorderThickness="0,0,0,1" />
                        <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                        <Path
                            x:Name="SortArrow"
                            Grid.Column="1"
                            Width="8"
                            Height="6"
                            Margin="0,0,8,0"
                            VerticalAlignment="Center"
                            Data="M0,0 L1,0 0.5,1 z"
                            Fill="{StaticResource TreeViewForeground}"
                            RenderTransformOrigin="0.5,0.4"
                            Stretch="Fill"
                            Visibility="Collapsed" />
                        <Rectangle
                            Grid.ColumnSpan="2"
                            Width="1"
                            HorizontalAlignment="Right"
                            Fill="{StaticResource VerticalGridLinesBrush}" />
                        <!--<Rectangle Width="1" Margin="0,0,1,0" Fill="{StaticResource TabBorderBrush}" HorizontalAlignment="Right" Grid.ColumnSpan="2" />-->
                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            HorizontalAlignment="Left"
                            Style="{StaticResource Style_HeaderGripper}" />
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            HorizontalAlignment="Right"
                            Style="{StaticResource Style_HeaderGripper}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource InactiveMainMenuBackground}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource TabBorderBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource MainMenuBackground}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F7581B1B" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#F7581B1B" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  Buttons  -->
    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  AvalonEdit  -->
    <Style x:Key="{x:Type avalonEdit:TextEditor}" TargetType="{x:Type avalonEdit:TextEditor}">
        <Setter Property="Background" Value="#FF1E1E1E" />
        <Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
    </Style>
    <!--  Tree View  -->
    <v:TreeViewLineConverter x:Key="LineConverter" />
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        Width="15"
                        Height="13"
                        SnapsToDevicePixels="True">
                        <!--  Rectangle 9x9 pixels  -->
                        <Rectangle
                            Width="9"
                            Height="9"
                            SnapsToDevicePixels="true"
                            Stroke="#919191">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,2">
                                    <GradientStop Offset="0" Color="White" />
                                    <GradientStop Offset="0.5" Color="Silver" />
                                    <GradientStop Offset="1" Color="LightGray" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <!--  Vertical line inside rectangle  -->
                        <Rectangle
                            x:Name="ExpandPath"
                            Width="1"
                            Height="5"
                            SnapsToDevicePixels="true"
                            Stroke="Black" />
                        <!--  Horizontal line inside rectangle  -->
                        <Rectangle
                            Width="5"
                            Height="1"
                            SnapsToDevicePixels="true"
                            Stroke="Black" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource TreeViewBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <!--  Connecting Lines  -->
                        <Border
                            x:Name="HorLn"
                            Height="1"
                            Margin="9,0,0,0"
                            HorizontalAlignment="Stretch"
                            BorderThickness="0,0,0,1">
                            <Border.BorderBrush>
                                <LinearGradientBrush MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="0,0" EndPoint="2,0">
                                    <GradientStop Offset="0" Color="Transparent" />
                                    <GradientStop Offset="0.499" Color="Transparent" />
                                    <GradientStop Offset="0.5" Color="#999" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Border
                            x:Name="VerLn"
                            Grid.RowSpan="2"
                            Width="1"
                            Margin="0,0,1,0"
                            VerticalAlignment="Stretch"
                            BorderThickness="0,0,1,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="0,0" EndPoint="0,2">
                                    <GradientStop Offset="0" Color="Transparent" />
                                    <GradientStop Offset="0.499" Color="Transparent" />
                                    <GradientStop Offset="0.5" Color="#999" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <!--  Insert Toggle Button  -->
                        <ToggleButton
                            x:Name="Expander"
                            Margin="-1,0,0,0"
                            ClickMode="Press"
                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border
                            Name="Bd"
                            Grid.Column="1"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                x:Name="PART_Header"
                                MinWidth="20"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentSource="Header" />
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="Height" Value="9" />
                            <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top" />
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="#F7581B1B" />
                            <Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="White" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource TreeViewForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  TabControl  -->
    <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource DarkBackground}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="BorderBrush" Value="{StaticResource TabBorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0"
                            Panel.ZIndex="1"
                            Background="{StaticResource DarkBackground}"
                            IsItemsHost="true"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource MainMenuForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border
                        Name="Border"
                        Margin="1,3,1,0"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="0">
                        <ContentPresenter
                            x:Name="ContentSite"
                            Margin="10,2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource TabHeaderBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource InactiveTabHeaderBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  StatusBar  -->
    <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{StaticResource StatusBarBackground}" />
        <Setter Property="FontFamily" Value="{StaticResource StandardFontFamily}" />
        <Setter Property="FontSize" Value="10pt" />
        <Setter Property="Foreground" Value="{StaticResource MainMenuForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>
    <!--  Grid Splitter  -->
    <v:GridSplitterRowHeightConverter x:Key="GridSplitterRowHeightConverter" />
    <Style x:Key="{x:Type GridSplitter}" TargetType="{x:Type GridSplitter}">
        <Setter Property="Width" Value="8" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <!--<Setter Property="ShowsPreview" Value="True" /> -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid Background="{StaticResource TreeViewBackground}">
                        <!--<Rectangle StrokeThickness="2" StrokeDashCap="Round" Stroke="#FF00B2E6" />-->
                        <Rectangle
                            Margin="2"
                            StrokeDashArray="0.1 1.5"
                            StrokeDashCap="Round"
                            StrokeThickness="2">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{Binding Source={StaticResource GridSplitterBrush}, Path=Color}" />
                                <!--  Color="{Binding Source={StaticResource MainMenuForeground}, Path=Color}"  -->
                            </Rectangle.Stroke>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HGridSplitter" TargetType="{x:Type GridSplitter}">
        <Setter Property="Height" Value="8" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ResizeDirection" Value="Rows" />
        <!--<Setter Property="ShowsPreview" Value="True" /> -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid Background="{StaticResource TreeViewBackground}">
                        <!--<Rectangle StrokeThickness="2" StrokeDashCap="Round" Stroke="#FF00B2E6" />-->
                        <Rectangle
                            Margin="2"
                            StrokeDashArray="0.1 1.5"
                            StrokeDashCap="Round"
                            StrokeThickness="2">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="#FF444444" />
                                <!--  Color="{Binding Source={StaticResource MainMenuForeground}, Path=Color}"  -->
                            </Rectangle.Stroke>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Scrollbar  -->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle
                            x:Name="Corner"
                            Grid.Row="1"
                            Grid.Column="1"
                            Fill="#DE3E3E3E" />
                        <!--  Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"  -->
                        <ScrollContentPresenter
                            x:Name="PART_ScrollContentPresenter"
                           
                            Margin="{TemplateBinding Padding}"
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False"
                            CanVerticallyScroll="False"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            Width="8"
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="0"
                            Height="8"
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="4" />
                        </Grid.ColumnDefinitions>
                        <Ellipse
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Fill="#FF444444" />
                        <!--  Fill="#FFF4F4F5"  -->
                        <Rectangle
                            Grid.Column="1"
                            Grid.ColumnSpan="3"
                            Fill="#FF444444" />
                        <Ellipse
                            Grid.Column="3"
                            Grid.ColumnSpan="2"
                            Fill="#FF444444" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4" />
                            <RowDefinition Height="4" />
                            <RowDefinition />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="4" />
                        </Grid.RowDefinitions>
                        <Ellipse
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Fill="#FF444444" />
                        <Rectangle
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Fill="#FF444444" />
                        <Ellipse
                            Grid.Row="3"
                            Grid.RowSpan="2"
                            Fill="#FF444444" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Width" Value="8" />
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="Bg"
                        Background="#DE2E2E2E"
                        SnapsToDevicePixels="true">
                        <!--  Background="#7FBFBFBF"  -->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0" MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition Height="0" MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.Resources>
                                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">100</sys:Double>
                            </Track.Resources>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb
                                    Width="8"
                                    Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"
                                    Style="{DynamicResource VerticalThumb}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="8" />
                <Setter Property="MinHeight" Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid
                                x:Name="Bg"
                                Background="#DE2E2E2E"
                                SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0" MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition Width="0" MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Column="1"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.Resources>
                                        <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">100</sys:Double>
                                    </Track.Resources>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb
                                            Height="8"
                                            Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"
                                            Style="{DynamicResource HorizontalThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>